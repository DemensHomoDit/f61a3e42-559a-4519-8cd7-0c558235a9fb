#!/usr/bin/env python3
from pdf_generator import generate_invoice_pdf
import sqlite3
import os

def test_pdf_generation():
    print("üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º PDF –≥–µ–Ω–µ—Ä–∞—Ü–∏—é...")
    
    # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –ë–î
    con = sqlite3.connect('../bot.db')
    cur = con.cursor()
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Å—á–µ—Ç –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
    cur.execute('SELECT COUNT(*) FROM invoices')
    count = cur.fetchone()[0]
    
    if count == 0:
        print("üìù –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Å—á–µ—Ç...")
        cur.execute('''
        INSERT INTO invoices (number, date, amount, status, customer, description, customer_details, created_at)
        VALUES (?, ?, ?, ?, ?, ?, ?, datetime('now'))
        ''', ('TEST-001', '2024-01-15', 150000.0, 'pending', '–û–û–û "–¢–µ—Å—Ç–æ–≤—ã–π –ö–ª–∏–µ–Ω—Ç"', 
              '–°—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω—ã–µ —Ä–∞–±–æ—Ç—ã –ø–æ –¥–æ–≥–æ–≤–æ—Ä—É –ø–æ–¥—Ä—è–¥–∞', 
              '–ò–ù–ù: 1234567890, –ö–ü–ü: 123456789, –ê–¥—Ä–µ—Å: –≥.–¢–µ—Å—Ç, —É–ª.–¢–µ—Å—Ç–æ–≤–∞—è, 1'))
        con.commit()
    
    # –ü–æ–ª—É—á–∞–µ–º —Å—á–µ—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    cur.execute('SELECT * FROM invoices ORDER BY id DESC LIMIT 1')
    invoice_row = cur.fetchone()
    
    if not invoice_row:
        print("‚ùå –°—á–µ—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!")
        return False
    
    # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ —Å–ª–æ–≤–∞—Ä—å
    columns = [description[0] for description in cur.description]
    invoice_data = dict(zip(columns, invoice_row))
    
    print(f"üìã –î–∞–Ω–Ω—ã–µ —Å—á–µ—Ç–∞: ‚Ññ{invoice_data.get('number', invoice_data['id'])}, {invoice_data.get('amount', 0)} —Ä—É–±.")
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º PDF
    output_path = 'test_invoice.pdf'
    try:
        result_path = generate_invoice_pdf(invoice_data, output_path)
        file_size = os.path.getsize(result_path)
        print(f"‚úÖ PDF —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω: {result_path}")
        print(f"üìä –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: {file_size:,} –±–∞–π—Ç")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Ñ–∞–π–ª –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Å–æ–∑–¥–∞–ª—Å—è
        if os.path.exists(result_path) and file_size > 1000:
            print("üéâ PDF –≥–µ–Ω–µ—Ä–∞—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")
            return True
        else:
            print("‚ùå PDF —Ñ–∞–π–ª –ø—É—Å—Ç–æ–π –∏–ª–∏ –ø–æ–≤—Ä–µ–∂–¥–µ–Ω")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ PDF: {e}")
        import traceback
        traceback.print_exc()
        return False
    finally:
        con.close()

if __name__ == "__main__":
    test_pdf_generation() 